name: Release DERP

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Download Tailscale source
        run: |
          git clone https://github.com/tailscale/tailscale.git
          cd tailscale
          git checkout main

      - name: Cross building DERP server
        run: |
          mkdir -p .build
          cd tailscale/cmd/derper
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o ../../.build/derp-linux-amd64
          # 添加其他架构编译命令...

      - name: Verify build output
        run: |
          echo "Files in .build directory:"
          ls -lah .build

      - name: Compress binaries with UPX
        run: |
          wget https://github.com/upx/upx/releases/download/v4.2.2/upx-4.2.2-amd64_linux.tar.xz
          tar -xJf upx-4.2.2-amd64_linux.tar.xz --strip-components=1 -C .build
          chmod +x .build/upx
          find .build -type f -name 'derp-*' -exec .build/upx --ultra-brute {} \;

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: Release DERP Server
          allowUpdates: true
          artifactErrorsFailBuild: true
          replacesArtifacts: true
          artifacts: ".build/derp-*"
          commit: main
          tag: derp-release-main-latest
          bodyFile: body.md
